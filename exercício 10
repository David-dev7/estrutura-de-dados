#include <stdio.h>
#include <stdlib.h>

typedef struct No {
    int valor;
    struct No* prox;
} No;

typedef struct {
    No* topo;
} Pilha;

void inicializar(Pilha* p) {
    p->topo = NULL;
}

int esta_vazia(Pilha* p) {
    return p->topo == NULL;
}

void push(Pilha* p, int valor) {
    No* novo = malloc(sizeof(No));
    novo->valor = valor;
    novo->prox = p->topo;
    p->topo = novo;
}

int pop(Pilha* p) {
    if (esta_vazia(p)) {
        printf("Pilha vazia!\n");
        return -1;
    }
    No* temp = p->topo;
    int val = temp->valor;
    p->topo = temp->prox;
    free(temp);
    return val;
}

int topo(Pilha* p) {
    if (esta_vazia(p)) {
        printf("Pilha vazia!\n");
        return -1;
    }
    return p->topo->valor;
}

int main() {
    Pilha p;
    inicializar(&p);

    push(&p, 5);
    push(&p, 10);
    push(&p, 15);

    printf("Topo: %d\n", topo(&p));

    while (!esta_vazia(&p)) {
        printf("Pop: %d\n", pop(&p));
    }

    return 0;
}
