#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char* dados;
    int topo;
    int capacidade;
} Pilha;

void pilha_inicializar(Pilha* p, int tamanho) {
    p->dados = malloc(tamanho * sizeof(char));
    p->topo = -1;
    p->capacidade = tamanho;
}

void pilha_push(Pilha* p, char c) {
    if (p->topo < p->capacidade - 1) p->dados[++(p->topo)] = c;
}

char pilha_pop(Pilha* p) {
    if (p->topo == -1) return '\0';
    return p->dados[(p->topo)--];
}

int pilha_vazia(Pilha* p) {
    return p->topo == -1;
}

int eh_palindromo(char* str) {
    int n = strlen(str);
    Pilha p;
    pilha_inicializar(&p, n);
    for (int i = 0; i < n / 2; i++) pilha_push(&p, str[i]);
    int start = (n % 2 == 0) ? n / 2 : n / 2 + 1;
    for (int i = start; i < n; i++) {
        if (pilha_pop(&p) != str[i]) {
            free(p.dados);
            return 0;
        }
    }
    free(p.dados);
    return 1;
}

int main() {
    printf("%d\n", eh_palindromo("radar"));
    printf("%d\n", eh_palindromo("hello"));
    return 0;
}
